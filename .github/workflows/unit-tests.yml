name: build

on:
    push:
    pull_request:

jobs:
    test:
        name: Build (${{matrix.php}}, ${{ matrix.os }}, ${{ matrix.stability }})
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                php: ['8.1']
                os: [ubuntu-latest]
                stability: [prefer-lowest, prefer-stable]

        steps:
            - name: Set Git To Use LF
              run: |
                  git config --global core.autocrlf false
                  git config --global core.eol lf

            - name: Checkout
              uses: actions/checkout@v2

            - name: Configure environment
              run: |
                  export COMPOSER_ROOT_VERSION=$(/usr/bin/jq --null-input --raw-output 'first(inputs["extra"]["branch-alias"])[]' composer.json)
                  echo COMPOSER_ROOT_VERSION=$COMPOSER_ROOT_VERSION >> $GITHUB_ENV

            - name: Setup PHP ${{ matrix.php }}
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  # PHP Extras
                  extensions: pdo, pdo_mysql, pdo_sqlite, sockets
                  coverage: pcov
                  tools: pecl
                  ini-values: "memory_limit=-1"

            - name: Validate Composer
              run: composer validate

            - name: Get Composer Cache Directory
                # Docs: <https://github.com/actions/cache/blob/master/examples.md#php---composer>
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Restore Composer Cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
                  restore-keys: ${{ runner.os }}-${{ matrix.php }}-composer-

            - name: Install Dependencies
              uses: nick-invision/retry@v1
              with:
                  timeout_minutes: 5
                  max_attempts: 5
                  command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

            - name: Execute Tests
              run: vendor/bin/phpunit --configuration=phpunit.xml.dist --coverage-clover=coverage.xml

            - name: Upload Coverage To Codecov
              uses: codecov/codecov-action@v1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  file: ./coverage.xml
                  fail_ci_if_error: false
